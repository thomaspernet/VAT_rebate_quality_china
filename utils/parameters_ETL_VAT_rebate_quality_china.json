{"GLOBAL": {"DESCRIPTION": "This paper studies the effect of industrial policy in China, the VAT export tax, on the quality upgrading. We use Chinese transaction data for 2002-2006 to isolate the causal impact of the exogenous variation of VAT refund tax and within firm-product change in HS6 exported quality products.", "GITHUB": {"owner": "thomaspernet", "repo_name": "VAT_rebate_quality_china"}, "DATABASE": "", "QUERIES_OUTPUT": "SQL_OUTPUT_ATHENA"}, "TABLES": {"CREATION": {"ALL_SCHEMA": [{"description": "Download sigma coefficient restricted to China", "schema": [{"Name": "ccode", "Type": "string", "Comment": "Country code"}, {"Name": "cname", "Type": "string", "Comment": "countr name"}, {"Name": "sigma", "Type": "float", "Comment": "sigma"}, {"Name": "HS3", "Type": "string", "Comment": "industry code"}], "partition_keys": [], "metadata": {"DatabaseName": "chinese_trade", "TablePrefix": "china_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/INDUSTRY/ADDITIONAL_DATA/SIGMAS_HS3", "from_athena": "False", "filename": "sigma.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/SIGMA/sigma.py"}}, {"description": "Download GDP per capita from the World Bank Website", "schema": [{"Name": "country", "Type": "string", "Comment": "Country name"}, {"Name": "iso_alpha", "Type": "string", "Comment": "Country code"}, {"Name": "iso_alpha03", "Type": "string", "Comment": "Country code, iso 03"}, {"Name": "year", "Type": "string", "Comment": "Year"}, {"Name": "gni_per_capita", "Type": "float", "Comment": "GDP per capita is gross domestic product divided by midyear population"}, {"Name": "gpd_per_capita", "Type": "float", "Comment": "GNI per capita (formerly GNP per capita) is the gross national income, converted to U.S. dollars using the World Bank Atlas method, divided by the midyear population"}, {"Name": "income_group", "Type": "string", "Comment": "One of 'Others', 'Low income', 'Upper middle income','High income: nonOECD', 'Lower middle income', 'High income: OECD'"}], "partition_keys": [], "metadata": {"DatabaseName": "world_bank", "TablePrefix": "world_bank_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/TRADE_DATA/RAW/WORLD_BANK/GDP_PER_CAPITA", "from_athena": "False", "filename": "gdp_per_capita.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/WORLD_BANK/gdp_per_capita.py"}}, {"description": "Download homogeneous goods from R library concordance", "schema": [{"Name": "hs6", "Type": "string", "Comment": "HS6 6 digits"}, {"Name": "goods", "Type": "string", "Comment": "0 is homoegeous and 1 is heterogeneous"}, {"Name": "homogeneous", "Type": "string", "Comment": "Goods label"}], "partition_keys": [], "metadata": {"DatabaseName": "industry", "TablePrefix": "hs6_", "target_S3URI": "s3://datalake-datascience/TRADE_DATA/RAW/GOODS_CLASSIFICATION/HOMOGENEOUS", "from_athena": "False", "filename": "hs_homogeneous_goods.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/HOMOGENEOUS_GOODS/hs_homogeneous_goods.py"}}, {"description": "Download city-product Density China", "schema": [{"Name": "hs6", "Type": "string", "Comment": "HS6 6 digits"}, {"Name": "density_china_ville", "Type": "float", "Comment": "Density china city-product"}, {"Name": "geocode4_corr", "Type": "string", "Comment": "Chinese city code"}], "partition_keys": [], "metadata": {"DatabaseName": "chinese_trade", "TablePrefix": "china_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/TRADE_DATA/CHINA/DENSITY", "from_athena": "False", "filename": "density.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/DENSITY/density.py"}}, {"description": "Download Baci export values HS6 country source destination", "schema": [{"Name": "t", "Type": "string", "Comment": "year"}, {"Name": "hs6", "Type": "string", "Comment": "HS6 6 digits"}, {"Name": "i", "Type": "string", "Comment": "origin country ID"}, {"Name": "j", "Type": "string", "Comment": "Destination country ID"}, {"Name": "v", "Type": "float", "Comment": "Export value"}, {"Name": "q", "Type": "float", "Comment": "Export quantity"}], "partition_keys": [], "metadata": {"DatabaseName": "trade", "TablePrefix": "baci_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/TRADE_DATA/BACI/EXPORT", "from_athena": "False", "filename": "baci_92_2002.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/BACI/baci_92_2002.py"}}, {"description": "Download vat rebate", "schema": [{"Name": "hs6", "Type": "string", "Comment": "6 digits product line"}, {"Name": "year", "Type": "string", "Comment": ""}, {"Name": "vat_m", "Type": "float", "Comment": "6 digits product line tax"}, {"Name": "vat_reb_m", "Type": "float", "Comment": "Percentage of tax refunded"}, {"Name": "tax_rebate", "Type": "float", "Comment": "Effective tax level: vat_m - vat_reb_m "}], "partition_keys": [], "metadata": {"DatabaseName": "chinese_trade", "TablePrefix": "hs6_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/TAX_DATA/CHINA_VAT_REBATE", "from_athena": "False", "filename": "vat_rebate.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/VAT_REBATE/vat_rebate.py"}}, {"description": "Create import export china", "schema": [{"Name": "date", "Type": "string", "Comment": "year trade recorded"}, {"Name": "ID", "Type": "string", "Comment": "firm ID"}, {"Name": "business_type", "Type": "string", "Comment": "business trade type"}, {"Name": "intermediate", "Type": "string", "Comment": "company name includes the following \u8fdb\u51fa\u53e3, \u8d38\u6613, \u5916\u8d38,\u5916\u7ecf, \u7ecf\u8d38, \u5de5\u8d38, \u79d1\u8d38, then there are intermediates firms"}, {"Name": "trade_type", "Type": "string", "Comment": "Trade type including ordianry or processing"}, {"Name": "province", "Type": "string", "Comment": "Province name"}, {"Name": "city_prod", "Type": "string", "Comment": "production site city name"}, {"Name": "matching_city", "Type": "string", "Comment": "matching name"}, {"Name": "imp_exp", "Type": "string", "Comment": "import or export"}, {"Name": "hs", "Type": "string", "Comment": "HS6 6 digit"}, {"Name": "origin_or_destination", "Type": "string", "Comment": "source or destination country"}, {"Name": "value", "Type": "int", "Comment": "import or export value"}, {"Name": "quantities", "Type": "int", "Comment": "import or export quantity"}], "partition_keys": [], "metadata": {"DatabaseName": "chinese_trade", "TablePrefix": "china_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/TRADE_DATA/CHINA/IMPORT_EXPORT", "from_athena": "False", "filename": "import_export.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/TRADE_CHINA/import_export.py"}}, {"description": "Download chinese country name (initialy in big query)", "schema": [{"Name": "country_cn", "Type": "string", "Comment": "Chinese country name"}, {"Name": "country_en", "Type": "string", "Comment": "English country name"}, {"Name": "iso_alpha", "Type": "string", "Comment": "country ID 1"}, {"Name": "code", "Type": "string", "Comment": "country ID 2"}, {"Name": "index", "Type": "int", "Comment": "index"}], "partition_keys": [], "metadata": {"DatabaseName": "chinese_lookup", "TablePrefix": "china_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/LOOKUP_DATA/COUNTRY_NAME", "from_athena": "False", "filename": "chinese_country_name.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/COUNTRY_NAME/chinese_country_name.py"}}, {"description": "Download trade tariff china", "schema": [{"Name": "reporter", "Type": "string", "Comment": ""}, {"Name": "year", "Type": "string", "Comment": ""}, {"Name": "import_tax", "Type": "float", "Comment": ""}, {"Name": "HS02", "Type": "string", "Comment": ""}], "partition_keys": [], "metadata": {"DatabaseName": "chinese_trade", "TablePrefix": "china_", "target_S3URI": "s3://datalake-datascience/DATA/ECON/TAX_DATA/CHINA/APPLIED_MFN_TARIFFS_HS2", "from_athena": "False", "filename": "mnf_tariff.py", "github_url": "https://github.com/thomaspernet/VAT_rebate_quality_china/01_data_preprocessing/00_download_data/APPLIED_MFN_TARIFFS/mnf_tariff.py"}}]}, "PREPARATION": {"STEPS": []}, "TRANSFORMATION": {"STEPS": []}}, "ANALYSIS": {"COUNT_MISSING": {"top": "SELECT COUNT(*) as nb_obs, ", "middle": "COUNT(*) - COUNT({0}) AS {0}", "bottom": " FROM {}.{}"}, "CATEGORICAL": {"PAIR": "SELECT {2}, COUNT(*) AS nb_obs FROM {0}.{1} GROUP BY {2} ORDER BY nb_obs DESC ", "MULTI_PAIR": "SELECT {2}, {3}, COUNT(*) AS nb_obs FROM {0}.{1} GROUP BY {2}, {3} ORDER BY nb_obs DESC "}, "CONTINUOUS": {"DISTRIBUTION": {"top_1": "SELECT * FROM (WITH table_wrapper AS (", "top_2": ") SELECT table_wrapper.pct,", "top_3": " FROM table_wrapper ", "middle_1": "  LEFT JOIN ( ", "middle_2": " ) as table_2_{0} ON table_wrapper.pct = table_2_{0}.pct ", "bottom": "WITH table_{3} AS ( SELECT MAP( ARRAY[0.25, 0.50, 0.75, 0.95, 0.99], approx_percentile( {2}, ARRAY[0.25, 0.50, 0.75, 0.95, 0.99] ) ) as nest FROM {0}.{1} ) SELECT pct, value AS {2} FROM table_{3} CROSS JOIN UNNEST(nest) AS t(pct, value)"}, "ONE_PAIR_DISTRIBUTION": {"top_1": "SELECT * FROM (WITH table_wrapper AS (", "top_2": ") SELECT table_wrapper.pct, table_wrapper.{}, ", "top_3": " FROM table_wrapper ", "middle_1": "  LEFT JOIN ( ", "middle_2": " ) as table_2_{0} ON table_wrapper.{1} = table_2_{0}.{1} AND table_wrapper.pct = table_2_{0}.pct ", "bottom": "WITH table_{3} AS ( SELECT {4}, MAP(ARRAY[0.25, 0.50, 0.75, 0.95, 0.99], approx_percentile( {2}, ARRAY[0.25, 0.50, 0.75, 0.95, 0.99] ) ) as nest FROM {0}.{1} GROUP BY {4}) SELECT {4}, pct, value AS {2} FROM table_{3} CROSS JOIN UNNEST(nest) AS t(pct, value)"}, "TWO_PAIRS_DISTRIBUTION": "WITH dataset AS ( SELECT {2}, {3}, MAP( ARRAY[0.25, 0.50, 0.75, 0.95, 0.99], approx_percentile( {4}, ARRAY[0.25, 0.50, 0.75, 0.95, 0.99] ) ) as nest FROM {0}.{1} GROUP BY {2}, {3} ) SELECT {2}, {3}, pct, value AS {4} FROM dataset CROSS JOIN UNNEST(nest) AS t(pct, value)"}, "COUNT_DUPLICATES": {"query": "SELECT CNT, COUNT(*) AS CNT_DUPLICATE FROM ( SELECT {2}, COUNT(*) as CNT FROM {0}.{1} GROUP BY {2} ) GROUP BY CNT ORDER BY CNT_DUPLICATE"}}}